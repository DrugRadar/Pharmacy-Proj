name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get authenticated user'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/email/verify/{id}/{hash}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the verify.'
        required: true
        example: nisi
        type: string
        custom: []
      hash:
        name: hash
        description: ''
        required: true
        example: quia
        type: string
        custom: []
    cleanUrlParameters:
      id: nisi
      hash: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/orders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a new order for a client.'
      description: 'This function takes in a `CreateOrderRequest` object as a parameter, which contains the request data for creating a new order. It validates the request data, checks if the delivering address ID exists for the authenticated client, and creates a new order in the database with the provided data. The prescription data is also filled in for the order. A JSON response is returned with the status message "Order created successfully" and the order data.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_insured:
        name: is_insured
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
      delivering_address_id:
        name: delivering_address_id
        description: ''
        required: true
        example: omnis
        type: string
        custom: []
      prescription:
        name: prescription
        description: ''
        required: true
        example:
          - dolorem
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      is_insured: false
      delivering_address_id: omnis
      prescription:
        - dolorem
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/orders
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve the orders for a client.'
      description: 'This function retrieves the orders associated with the authenticated client. It queries the `Order` model to fetch all orders that have the same client ID as the authenticated client. The retrieved orders are then transformed into a collection of `OrderResource` objects and returned as the response.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/orders/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Retrieve the details of a specific order.'
      description: 'This function retrieves the details of a specific order identified by the given ID. It queries the `Order` model to find the order with the provided ID. If the order is found, it is transformed into an `OrderResource` object and returned as the response. If the order is not found, an appropriate error response is returned.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/orders/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the details of an existing order.'
      description: 'This function updates the details of an existing order identified by the given ID. It first retrieves the order using the `Order` model and checks if the order status is "new". If the order status is "new", it then validates and updates the order details based on the provided request data. If the updated order details are valid, the order is saved and a success response is returned with the updated order details. If the order status is not "new", an appropriate error response is returned indicating that the order cannot be updated. If the delivering address ID provided in the request does not exist for the client, another error response is returned indicating the same.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the order.'
        required: true
        example: 1
        type: integer
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      is_insured:
        name: is_insured
        description: ''
        required: true
        example: false
        type: boolean
        custom: []
      delivering_address_id:
        name: delivering_address_id
        description: ''
        required: true
        example: corrupti
        type: string
        custom: []
      prescription:
        name: prescription
        description: ''
        required: true
        example:
          - consequatur
        type: 'string[]'
        custom: []
    cleanBodyParameters:
      is_insured: false
      delivering_address_id: corrupti
      prescription:
        - consequatur
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
